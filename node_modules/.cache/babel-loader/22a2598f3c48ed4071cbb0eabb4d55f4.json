{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\sayone_test\\\\src\\\\components\\\\Order\\\\Order.jsx\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 400\n  }\n});\n\nconst Order = () => {\n  const initial = [{\n    'user': 'John Smith',\n    'product': 'coco cola',\n    'price': '1 EUR',\n    'quantity': '2',\n    'total': '2 EUR',\n    'date': '2020 nov 3',\n    'actions': /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setRow([rows.pop()])\n    }, \"Delete\")\n  }, {\n    'user': 'jose Smith',\n    'product': 'coco cola',\n    'price': '1 EUR',\n    'quantity': '2',\n    'total': '2 EUR',\n    'date': '2020 nov 3',\n    'actions': /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setRow([rows.pop()])\n    }, \"Delete\")\n  }];\n  const [data, setData] = useState({\n    user: '',\n    product: '',\n    quantity: ''\n  });\n  const [rows, setRow] = useState(initial);\n  const classes = useStyles();\n\n  const addOrder = () => {\n    // rows.push({ 'user': 'rest Smith', 'product': 'coco cola', 'price': '1 EUR', 'quantity': '2', 'total': '2 EUR', 'date': '2020 nov 3', 'actions': 'edit delete' });\n    setRow([...rows, {\n      'user': `${data.user}`,\n      'product': `${data.product}`,\n      'price': '1 EUR',\n      'quantity': `${data.quantity}`,\n      'total': `${data.quantity * 2} EUR`,\n      'date': '2020 nov 3',\n      'actions': /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => setRow([rows.pop()])\n      }, \"Delete\")\n    }]);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '600px',\n      border: '2px solid grey',\n      height: '200px'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Add new order\"), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"users\"\n  }, \"User\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"users\",\n    name: \"users\",\n    value: data.user,\n    onChange: e => setData({ ...data,\n      user: e.target.value\n    })\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"john\"\n  }, \"john\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"bob\"\n  }, \"bob\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"alice\"\n  }, \"alice\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"smith\"\n  }, \"smith\"))), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"product\"\n  }, \"Product\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"product\",\n    name: \"product\",\n    value: data.product,\n    onChange: e => setData({ ...data,\n      product: e.target.value\n    })\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"fanta\"\n  }, \"fanta\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"cococola\"\n  }, \"cococola\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"miranda\"\n  }, \"miranda\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"pepso\"\n  }, \"pepso\"))), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"quantity\"\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"\",\n    id: \"\",\n    value: data.Fquantity,\n    onChange: e => setData({ ...data,\n      quantity: e.target.value\n    })\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: addOrder\n  }, \"Add\"))), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    style: {\n      width: '800px'\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    size: \"small\",\n    \"aria-label\": \"a dense table\"\n  }, /*#__PURE__*/React.createElement(TableHead, null, /*#__PURE__*/React.createElement(TableRow, null, /*#__PURE__*/React.createElement(TableCell, null, \"User\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\"\n  }, \"Product\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\"\n  }, \"Price\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\"\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\"\n  }, \"Total\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\"\n  }, \"Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\"\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(TableBody, null, rows.map(row => /*#__PURE__*/React.createElement(TableRow, {\n    key: row.name\n  }, /*#__PURE__*/React.createElement(TableCell, null, row.user), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\"\n  }, row.product), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\"\n  }, row.price), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\"\n  }, row.quantity), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\"\n  }, row.total), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\"\n  }, row.date), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\"\n  }, row.actions)))))));\n};\n\nexport default Order;","map":{"version":3,"sources":["D:/React/sayone_test/src/components/Order/Order.jsx"],"names":["React","useState","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","table","minWidth","Order","initial","setRow","rows","pop","data","setData","user","product","quantity","classes","addOrder","width","border","height","e","target","value","Fquantity","map","row","name","price","total","date","actions"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 400,\r\n    },\r\n});\r\n\r\nconst Order = () => {\r\n    const initial = [\r\n        { 'user': 'John Smith', 'product': 'coco cola', 'price': '1 EUR', 'quantity': '2', 'total': '2 EUR', 'date': '2020 nov 3', 'actions': <button onClick={() => setRow([rows.pop()])}>Delete</button> },\r\n        { 'user': 'jose Smith', 'product': 'coco cola', 'price': '1 EUR', 'quantity': '2', 'total': '2 EUR', 'date': '2020 nov 3', 'actions': <button onClick={() => setRow([rows.pop()])}>Delete</button> },\r\n    ];\r\n    const [data, setData] = useState({ user: '', product: '', quantity: '' });\r\n    const [rows, setRow] = useState(initial);\r\n    const classes = useStyles();\r\n    const addOrder = () => {\r\n        // rows.push({ 'user': 'rest Smith', 'product': 'coco cola', 'price': '1 EUR', 'quantity': '2', 'total': '2 EUR', 'date': '2020 nov 3', 'actions': 'edit delete' });\r\n        setRow([...rows, {\r\n            'user': `${data.user}`, 'product': `${data.product}`, 'price': '1 EUR', 'quantity': `${data.quantity}`, 'total': `${data.quantity * 2} EUR`, 'date': '2020 nov 3', 'actions': <button onClick={() => setRow([rows.pop()])}>Delete</button>\r\n        }])\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{ width: '600px', border: '2px solid grey', height: '200px' }}>\r\n                <div>Add new order</div>\r\n                <div>\r\n                    <label for=\"users\">User</label>\r\n                    <select id=\"users\" name=\"users\" value={data.user} onChange={e => setData({ ...data, user: e.target.value })}>\r\n                        <option value=\"john\">john</option>\r\n                        <option value=\"bob\">bob</option>\r\n                        <option value=\"alice\">alice</option>\r\n                        <option value=\"smith\">smith</option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label for=\"product\">Product</label>\r\n                    <select id=\"product\" name=\"product\" value={data.product} onChange={e => setData({ ...data, product: e.target.value })}>\r\n                        <option value=\"fanta\">fanta</option>\r\n                        <option value=\"cococola\">cococola</option>\r\n                        <option value=\"miranda\">miranda</option>\r\n                        <option value=\"pepso\">pepso</option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label for=\"quantity\">Quantity</label>\r\n                    <input type=\"text\" name=\"\" id=\"\" value={data.Fquantity} onChange={e => setData({ ...data, quantity: e.target.value })} />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" onClick={addOrder}>Add</button>\r\n                </div>\r\n            </div>\r\n            <TableContainer component={Paper} style={{ width: '800px' }}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>User</TableCell>\r\n                            <TableCell align=\"right\">Product</TableCell>\r\n                            <TableCell align=\"right\">Price</TableCell>\r\n                            <TableCell align=\"right\">Quantity</TableCell>\r\n                            <TableCell align=\"right\">Total</TableCell>\r\n                            <TableCell align=\"right\">Date</TableCell>\r\n                            <TableCell align=\"right\">Actions</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.name}>\r\n                                <TableCell >{row.user}</TableCell>\r\n                                <TableCell align=\"right\">{row.product}</TableCell>\r\n                                <TableCell align=\"right\">{row.price}</TableCell>\r\n                                <TableCell align=\"right\">{row.quantity}</TableCell>\r\n                                <TableCell align=\"right\">{row.total}</TableCell>\r\n                                <TableCell align=\"right\">{row.date}</TableCell>\r\n                                <TableCell align=\"right\">{row.actions}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Order;"]},"metadata":{},"sourceType":"module"}