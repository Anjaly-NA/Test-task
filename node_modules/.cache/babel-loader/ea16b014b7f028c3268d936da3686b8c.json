{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\sayone_test\\\\src\\\\components\\\\hoc\\\\withCounter.jsx\";\nimport React from 'react';\n\nconst withCounter = (OriginalComponent, incrementNumber) => {\n  class WithCounter extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.incrementCounter = () => {\n        this.setState(prevState => {\n          return {\n            count: prevState.count + incrementNumber\n          };\n        });\n      };\n\n      this.state = {\n        count: 0\n      };\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(OriginalComponent, Object.assign({\n        count: this.state.count,\n        incrementCounter: this.incrementCounter\n      }, this.props));\n    }\n\n  }\n\n  return WithCounter;\n};\n\nexport default withCounter;","map":{"version":3,"sources":["D:/React/sayone_test/src/components/hoc/withCounter.jsx"],"names":["React","withCounter","OriginalComponent","incrementNumber","WithCounter","Component","constructor","props","incrementCounter","setState","prevState","count","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAG,CAACC,iBAAD,EAAoBC,eAApB,KAAwC;AACxD,QAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AACtCC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YAAMA,KAAN;;AADe,WAMnBC,gBANmB,GAMA,MAAM;AACrB,aAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,iBAAO;AAAEC,YAAAA,KAAK,EAAED,SAAS,CAACC,KAAV,GAAkBR;AAA3B,WAAP;AACH,SAFD;AAGH,OAVkB;;AAEf,WAAKS,KAAL,GAAa;AACTD,QAAAA,KAAK,EAAE;AADE,OAAb;AAGH;;AAMDE,IAAAA,MAAM,GAAG;AACL,0BACI,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWD,KAArC;AAA4C,QAAA,gBAAgB,EAAE,KAAKH;AAAnE,SAAyF,KAAKD,KAA9F,EADJ;AAGH;;AAhBqC;;AAkB1C,SAAQH,WAAR;AACH,CApBD;;AAqBA,eAAeH,WAAf","sourcesContent":["import React from 'react';\r\n\r\nconst withCounter = (OriginalComponent, incrementNumber) => {\r\n    class WithCounter extends React.Component {\r\n        constructor(props) {\r\n            super(props)\r\n            this.state = {\r\n                count: 0\r\n            }\r\n        }\r\n        incrementCounter = () => {\r\n            this.setState(prevState => {\r\n                return { count: prevState.count + incrementNumber }\r\n            })\r\n        }\r\n        render() {\r\n            return (\r\n                <OriginalComponent count={this.state.count} incrementCounter={this.incrementCounter} {...this.props} />\r\n            )\r\n        }\r\n    }\r\n    return (WithCounter)\r\n}\r\nexport default withCounter;"]},"metadata":{},"sourceType":"module"}