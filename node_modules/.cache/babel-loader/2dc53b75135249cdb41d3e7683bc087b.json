{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\sayone_test\\\\src\\\\components\\\\Login\\\\Login.jsx\";\nimport React from 'react';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router\";\nimport './Login.css';\nconst SignUpSchema = Yup.object().shape({\n  email: Yup.string().email().required(\"Email is required\"),\n  password: Yup.string().required(\"Password is required\").min(6, \"Password is too short - should be 6 chars minimum\")\n});\nconst initialValues = {\n  email: \"\",\n  password: \"\"\n};\n\nconst Form = () => {\n  const history = useHistory();\n\n  const submitForm = values => {\n    console.log(values); // history.push('/home');\n  };\n\n  const handleForgot = () => {};\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues // validate={validate}\n    ,\n    onSubmit: submitForm,\n    validationSchema: SignUpSchema\n  }, formik => {\n    const {\n      values,\n      handleChange,\n      handleSubmit,\n      errors,\n      touched,\n      handleBlur,\n      isValid,\n      dirty\n    } = formik;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"container\"\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"row justify-content-center align-items-center\"\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"col-sm-6 col-md-6 bg col-lg-4\"\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-container\",\n      onSubmit: handleSubmit\n    }, /*#__PURE__*/React.createElement(\"h4\", null, \"Login Here\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"exampleInputEmail1\"\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      \"aria-describedby\": \"emailHelp\",\n      name: \"email\",\n      id: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.email && touched.email ? \"is-invalid form-control\" : 'form-control'\n    }), errors.email && touched.email ? /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"invalid-feedback\"\n    }, errors.email) : /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text text-muted\"\n    }, \"We'll never share your email.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"exampleInputPassword1\"\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.password && touched.password ? \"is-invalid form-control\" : 'form-control'\n    }), errors.password && touched.password ? /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"invalid-feedback\"\n    }, errors.password) : /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text text-muted\"\n    }, \"Minimum 6 characters.\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: dirty && isValid ? \"btn btn-primary btn-block\" : \"btn btn-primary btn-block disabled-btn\",\n      disabled: !(dirty && isValid)\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      onClick: handleForgot\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text forgot-text\"\n    }, \"Register Here!\"))))));\n  }));\n};\n\nexport default Form;","map":{"version":3,"sources":["D:/React/sayone_test/src/components/Login/Login.jsx"],"names":["React","Formik","Yup","useHistory","SignUpSchema","object","shape","email","string","required","password","min","initialValues","Form","history","submitForm","values","console","log","handleForgot","formik","handleChange","handleSubmit","errors","touched","handleBlur","isValid","dirty"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useHistory } from \"react-router\";\r\nimport './Login.css';\r\n\r\nconst SignUpSchema = Yup.object().shape({\r\n    email: Yup.string().email().required(\"Email is required\"),\r\n    password: Yup.string()\r\n        .required(\"Password is required\")\r\n        .min(6, \"Password is too short - should be 6 chars minimum\"),\r\n});\r\n\r\nconst initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n};\r\nconst Form = () => {\r\n    const history = useHistory();\r\n    const submitForm = (values) => {\r\n        console.log(values);\r\n        // history.push('/home');\r\n    };\r\n    const handleForgot = () => {\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                // validate={validate}\r\n                onSubmit={submitForm}\r\n                validationSchema={SignUpSchema}\r\n            >\r\n                {(formik) => {\r\n                    const {\r\n                        values,\r\n                        handleChange,\r\n                        handleSubmit,\r\n                        errors,\r\n                        touched,\r\n                        handleBlur,\r\n                        isValid,\r\n                        dirty\r\n                    } = formik;\r\n                    return (\r\n                        <section className='container'>\r\n                            <section className='row justify-content-center align-items-center'>\r\n                                <section className='col-sm-6 col-md-6 bg col-lg-4'>\r\n                                    <form className='form-container' onSubmit={handleSubmit}>\r\n                                        <h4>Login Here</h4>\r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"exampleInputEmail1\">\r\n                                                Email address\r\n                                            </label>\r\n                                            <input type=\"email\" aria-describedby=\"emailHelp\"\r\n                                                name=\"email\"\r\n                                                id=\"email\"\r\n                                                value={values.email}\r\n                                                onChange={handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                className={errors.email && touched.email ?\r\n                                                    \"is-invalid form-control\" : 'form-control'}\r\n                                            />\r\n                                            {errors.email && touched.email ? <small id=\"emailHelp\" className=\"invalid-feedback\">{errors.email}</small> : <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                                                We'll never share your email.\r\n                                            </small>}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"exampleInputPassword1\">\r\n                                                Password\r\n                                            </label>\r\n                                            <input type=\"password\"\r\n                                                name=\"password\"\r\n                                                id=\"password\"\r\n                                                value={values.password}\r\n                                                onChange={handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                className={errors.password && touched.password ?\r\n                                                    \"is-invalid form-control\" : 'form-control'}\r\n                                            />\r\n                                            {errors.password && touched.password ? <small id=\"emailHelp\" className=\"invalid-feedback\">{errors.password}</small> : <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                                                Minimum 6 characters.\r\n                                            </small>}\r\n                                        </div>\r\n                                        <button type=\"submit\"\r\n                                            className={dirty && isValid ? \"btn btn-primary btn-block\" : \"btn btn-primary btn-block disabled-btn\"}\r\n                                            disabled={!(dirty && isValid)}>\r\n                                            Submit\r\n                                        </button>\r\n                                        <div className=\"form-group\" onClick={handleForgot}>\r\n                                            <small id=\"emailHelp\" className=\"form-text forgot-text\">\r\n                                                Register Here!\r\n                                        </small>\r\n                                        </div>\r\n                                    </form>\r\n                                </section>\r\n                            </section>\r\n                        </section>\r\n                    );\r\n                }}\r\n            </Formik>\r\n\r\n            {/* <Formik\r\n                initialValues={initialValues}\r\n                // validate={validate}\r\n                onSubmit={submitForm}\r\n                validationSchema={SignUpSchema}\r\n            >\r\n                {(formik) => {\r\n                    const {\r\n                        values,\r\n                        handleChange,\r\n                        handleSubmit,\r\n                        errors,\r\n                        touched,\r\n                        handleBlur,\r\n                        isValid,\r\n                        dirty\r\n                    } = formik;\r\n                    return (\r\n                        <div className=\"container\">\r\n                            <h1>Sign in to continue</h1>\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div className=\"form-row\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        id=\"email\"\r\n                                        value={values.email}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={errors.email && touched.email ?\r\n                                            \"input-error\" : null}\r\n                                    />\r\n                                    {errors.email && touched.email && (\r\n                                        <span className=\"error\">{errors.email}</span>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"form-row\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        id=\"password\"\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        className={errors.password && touched.password ?\r\n                                            \"input-error\" : null}\r\n                                    />\r\n                                    {errors.password && touched.password && (\r\n                                        <span className=\"error\">{errors.password}</span>\r\n                                    )}\r\n                                </div>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className={dirty && isValid ? \"\" : \"disabled-btn\"}\r\n                                    disabled={!(dirty && isValid)}>\r\n                                    Sign In\r\n                            </button>\r\n                            </form>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Formik> */}\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}