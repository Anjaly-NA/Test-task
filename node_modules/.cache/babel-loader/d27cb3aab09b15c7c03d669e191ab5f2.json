{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\sayone_test\\\\src\\\\components\\\\Register\\\\Register.jsx\";\nimport React from 'react';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router\";\nimport firebase from '../../firebase';\nconst phoneRegExp = /((\\+*)((0[ -]+)*|(91 )*)(\\d{12}|\\d{10}))|\\d{5}([- ]*)\\d{6}/;\nconst SignUpSchema = Yup.object().shape({\n  firstName: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Firstname is required\"),\n  lastName: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Lastname is required\"),\n  phoneNumber: Yup.string().required(\"Phone number is required\").matches(phoneRegExp, \"Invalid phone number\"),\n  email: Yup.string().email().required(\"Email is required\"),\n  password: Yup.string().required(\"Password is required\").min(6, \"Too short - 6 chars minimum\"),\n  acceptTerms: Yup.bool().oneOf([true], 'Accept Terms & Conditions is required').required()\n});\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n  firstName: '',\n  lastName: '',\n  phoneNumber: '',\n  acceptTerms: false\n};\n\nconst Registration = props => {\n  const history = useHistory();\n\n  async function submitForm(values) {\n    try {\n      await firebase.register(values.firstName, values.email, values.password); // history.push('/home')\n    } catch (error) {\n      alert(error.message);\n    } // console.log(values);\n    // history.push('/login');\n\n  }\n\n  ;\n  const {\n    onClose,\n    handlePopup\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues // validate={validate}\n    ,\n    onSubmit: submitForm,\n    validationSchema: SignUpSchema\n  }, formik => {\n    const {\n      values,\n      handleChange,\n      handleSubmit,\n      errors,\n      touched,\n      handleBlur,\n      isValid,\n      dirty\n    } = formik;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"container\"\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"row justify-content-center\"\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"bg col-lg-9\"\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-container\",\n      onSubmit: handleSubmit\n    }, /*#__PURE__*/React.createElement(\"h4\", null, \"Register Here\", /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      onClick: onClose\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, \"Close\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"firstName\"\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"firstName\",\n      id: \"firstName\",\n      value: values.firstName,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.firstName && touched.firstName ? \"is-invalid form-control\" : 'form-control'\n    }), errors.firstName && touched.firstName ? /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"invalid-feedback\"\n    }, errors.firstName) : /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text text-muted\"\n    }, \"*Mandatory field.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"lastName\"\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lastName\",\n      id: \"lastName\",\n      value: values.lastName,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.lastName && touched.lastName ? \"is-invalid form-control\" : 'form-control'\n    }), errors.lastName && touched.lastName ? /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"invalid-feedback\"\n    }, errors.lastName) : /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text text-muted\"\n    }, \"*Mandatory field.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"phoneNumber\"\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phoneNumber\",\n      id: \"phoneNumber\",\n      value: values.phoneNumber,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.phoneNumber && touched.phoneNumber ? \"is-invalid form-control\" : 'form-control'\n    }), errors.phoneNumber && touched.phoneNumber ? /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"invalid-feedback\"\n    }, errors.phoneNumber) : /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text text-muted\"\n    }, \"*Mandatory field.\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputEmail1\"\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      \"aria-describedby\": \"emailHelp\",\n      name: \"email\",\n      id: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.email && touched.email ? \"is-invalid form-control\" : 'form-control'\n    }), errors.email && touched.email ? /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"invalid-feedback\"\n    }, errors.email) : /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text text-muted\"\n    }, \"We'll never share your email.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\"\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"exampleInputPassword1\"\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.password && touched.password ? \"is-invalid form-control\" : 'form-control'\n    }), errors.password && touched.password ? /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"invalid-feedback\"\n    }, errors.password) : /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text text-muted\"\n    }, \"Minimum 6 characters.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\"\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"acceptTerms\",\n      value: values.acceptTerms,\n      onChange: handleChange,\n      onBlur: handleBlur // className={errors.acceptTerms && touched.acceptTerms ?\n      //     \"input-error\" : null}\n      ,\n      className: 'form-check-input ' + (errors.acceptTerms && touched.acceptTerms ? ' is-invalid' : '')\n    }), errors.acceptTerms && touched.acceptTerms ? /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"invalid-feedback\"\n    }, errors.acceptTerms) : /*#__PURE__*/React.createElement(\"small\", {\n      id: \"emailHelp\",\n      className: \"form-text text-muted\"\n    }, \"Accept terms and conditions.\")))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: dirty && isValid ? \"btn btn-primary btn-block\" : \"btn btn-primary btn-block disabled-btn\",\n      disabled: !(dirty && isValid)\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\"\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center pointer\",\n      onClick: () => handlePopup(true)\n    }, \"Sign In Here\"))))));\n  }));\n};\n\nexport default Registration;","map":{"version":3,"sources":["D:/React/sayone_test/src/components/Register/Register.jsx"],"names":["React","Formik","Yup","useHistory","firebase","phoneRegExp","SignUpSchema","object","shape","firstName","string","min","max","required","lastName","phoneNumber","matches","email","password","acceptTerms","bool","oneOf","initialValues","Registration","props","history","submitForm","values","register","error","alert","message","onClose","handlePopup","formik","handleChange","handleSubmit","errors","touched","handleBlur","isValid","dirty"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useHistory } from \"react-router\";\r\nimport firebase from '../../firebase';\r\n\r\nconst phoneRegExp = /((\\+*)((0[ -]+)*|(91 )*)(\\d{12}|\\d{10}))|\\d{5}([- ]*)\\d{6}/\r\nconst SignUpSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .min(2, \"Too Short!\")\r\n        .max(50, \"Too Long!\")\r\n        .required(\"Firstname is required\"),\r\n\r\n    lastName: Yup.string()\r\n        .min(2, \"Too Short!\")\r\n        .max(50, \"Too Long!\")\r\n        .required(\"Lastname is required\"),\r\n\r\n    phoneNumber: Yup.string()\r\n        .required(\"Phone number is required\")\r\n        .matches(phoneRegExp, \"Invalid phone number\"\r\n        ),\r\n    email: Yup.string().email().required(\"Email is required\"),\r\n    password: Yup.string()\r\n        .required(\"Password is required\")\r\n        .min(6, \"Too short - 6 chars minimum\"),\r\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Terms & Conditions is required')\r\n        .required()\r\n});\r\n\r\nconst initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: '',\r\n    lastName: '',\r\n    phoneNumber: '',\r\n    acceptTerms: false\r\n};\r\nconst Registration = (props) => {\r\n    const history = useHistory();\r\n    async function submitForm(values) {\r\n        try {\r\n            await firebase.register(values.firstName, values.email, values.password)\r\n            // history.push('/home')\r\n        } catch (error) {\r\n            alert(error.message)\r\n        }\r\n        // console.log(values);\r\n        // history.push('/login');\r\n    };\r\n    const { onClose, handlePopup } = props;\r\n    return (\r\n        <React.Fragment>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                // validate={validate}\r\n                onSubmit={submitForm}\r\n                validationSchema={SignUpSchema}\r\n            >\r\n                {(formik) => {\r\n                    const {\r\n                        values,\r\n                        handleChange,\r\n                        handleSubmit,\r\n                        errors,\r\n                        touched,\r\n                        handleBlur,\r\n                        isValid,\r\n                        dirty\r\n                    } = formik;\r\n                    return (\r\n                        <section className='container'>\r\n                            <section className='row justify-content-center'>\r\n                                <section className='bg col-lg-9'>\r\n                                    <form className='form-container' onSubmit={handleSubmit}>\r\n                                        <h4>Register Here\r\n                                            <button type=\"button\" className=\"close\" onClick={onClose}><span aria-hidden=\"true\">&times;</span><span className=\"sr-only\">Close</span></button>\r\n                                        </h4>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"firstName\">First Name</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        id=\"firstName\"\r\n                                                        value={values.firstName}\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        className={errors.firstName && touched.firstName ?\r\n                                                            \"is-invalid form-control\" : 'form-control'}\r\n                                                    />\r\n                                                    {errors.firstName && touched.firstName ? <small id=\"emailHelp\" className=\"invalid-feedback\">{errors.firstName}</small> : <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                                                        *Mandatory field.\r\n                                                    </small>}\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"lastName\">Last Name</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        name=\"lastName\"\r\n                                                        id=\"lastName\"\r\n                                                        value={values.lastName}\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        className={errors.lastName && touched.lastName ?\r\n                                                            \"is-invalid form-control\" : 'form-control'}\r\n                                                    />\r\n                                                    {errors.lastName && touched.lastName ? <small id=\"emailHelp\" className=\"invalid-feedback\">{errors.lastName}</small> : <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                                                        *Mandatory field.\r\n                                            </small>}\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"phoneNumber\">Phone Number</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        name=\"phoneNumber\"\r\n                                                        id=\"phoneNumber\"\r\n                                                        value={values.phoneNumber}\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        className={errors.phoneNumber && touched.phoneNumber ?\r\n                                                            \"is-invalid form-control\" : 'form-control'}\r\n                                                    />\r\n                                                    {errors.phoneNumber && touched.phoneNumber ? <small id=\"emailHelp\" className=\"invalid-feedback\">{errors.phoneNumber}</small> : <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                                                        *Mandatory field.\r\n                                            </small>}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"exampleInputEmail1\">\r\n                                                        Email address\r\n                                            </label>\r\n                                                    <input type=\"email\" aria-describedby=\"emailHelp\"\r\n                                                        name=\"email\"\r\n                                                        id=\"email\"\r\n                                                        value={values.email}\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        className={errors.email && touched.email ?\r\n                                                            \"is-invalid form-control\" : 'form-control'}\r\n                                                    />\r\n                                                    {errors.email && touched.email ? <small id=\"emailHelp\" className=\"invalid-feedback\">{errors.email}</small> : <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                                                        We'll never share your email.\r\n                                            </small>}\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"exampleInputPassword1\">\r\n                                                        Password\r\n                                            </label>\r\n                                                    <input type=\"password\"\r\n                                                        name=\"password\"\r\n                                                        id=\"password\"\r\n                                                        value={values.password}\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        className={errors.password && touched.password ?\r\n                                                            \"is-invalid form-control\" : 'form-control'}\r\n                                                    />\r\n                                                    {errors.password && touched.password ? <small id=\"emailHelp\" className=\"invalid-feedback\">{errors.password}</small> : <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                                                        Minimum 6 characters.\r\n                                            </small>}\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <input type=\"checkbox\" name=\"acceptTerms\"\r\n                                                        value={values.acceptTerms}\r\n                                                        onChange={handleChange}\r\n                                                        onBlur={handleBlur}\r\n                                                        // className={errors.acceptTerms && touched.acceptTerms ?\r\n                                                        //     \"input-error\" : null}\r\n                                                        className={'form-check-input ' + (errors.acceptTerms && touched.acceptTerms ? ' is-invalid' : '')}\r\n                                                    />\r\n                                                    {errors.acceptTerms && touched.acceptTerms ? <small id=\"emailHelp\" className=\"invalid-feedback\">{errors.acceptTerms}</small> : <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                                                        Accept terms and conditions.\r\n                                            </small>}\r\n                                                    {/* <label htmlFor=\"acceptTerms\" className=\"form-check-label\">Accept Terms & Conditions</label>\r\n                                            {errors.acceptTerms && touched.acceptTerms && (\r\n                                                <span className=\"error\">{errors.acceptTerms}</span>\r\n                                            )} */}\r\n                                                    {/* <ErrorMessage name=\"acceptTerms\" component=\"div\" className=\"invalid-feedback\" /> */}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <button type=\"submit\"\r\n                                            className={dirty && isValid ? \"btn btn-primary btn-block\" : \"btn btn-primary btn-block disabled-btn\"}\r\n                                            disabled={!(dirty && isValid)}>\r\n                                            Submit\r\n                                        </button>\r\n                                        <div className=\"form-group\">\r\n                                            <p className=\"text-center pointer\" onClick={() => handlePopup(true)}>Sign In Here</p>\r\n                                        </div>\r\n                                    </form>\r\n                                </section>\r\n                            </section>\r\n                        </section>\r\n                    );\r\n                }}\r\n            </Formik>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default Registration;"]},"metadata":{},"sourceType":"module"}