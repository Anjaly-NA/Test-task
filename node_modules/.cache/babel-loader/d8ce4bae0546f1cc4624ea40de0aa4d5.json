{"ast":null,"code":"import firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\"; // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA4Ie918eDFKCus2bbBqicVXVUnR4Ih-kk\",\n  authDomain: \"testproject-5c3fd.firebaseapp.com\",\n  projectId: \"testproject-5c3fd\",\n  storageBucket: \"testproject-5c3fd.appspot.com\",\n  messagingSenderId: \"854663840169\",\n  appId: \"1:854663840169:web:5c29535fa95583c5f084b8\",\n  measurementId: \"G-9RYWCQKJKQ\"\n}; // export const auth = firebase.auth();\n// export const firestore = firebase.firestore();\n\nfirebase.initializeApp(firebaseConfig);\n\nclass Firebase {\n  constructor() {\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  }\n\n  addEvents(title, description, date) {\n    const eventRef = firebase.database().ref('Event');\n    const event = {\n      title,\n      description,\n      date\n    };\n    eventRef.push(event);\n  }\n\n  getEvents() {\n    const eventRef = firebase.database().ref('Event');\n    eventRef.on('value', snapshot => {\n      const todos = snapshot.val();\n      const todoList = [];\n\n      for (let id in todos) {\n        todoList.push(todos[id]);\n      }\n\n      return todoList;\n    });\n  }\n\n  login(email, password) {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  logout() {\n    return this.auth.signOut();\n  }\n\n  async register(firstName, lastName, phoneNumber, acceptTerms, email, password) {\n    await this.auth.createUserWithEmailAndPassword(email, password);\n    return this.auth.currentUser.updateProfile({\n      displayName: firstName + ' ' + lastName,\n      phoneNumber: phoneNumber,\n      acceptTerms: acceptTerms,\n      email: email,\n      password: password\n    });\n  }\n\n  addEvent(title, description, date) {\n    if (!this.auth.currentUser) {\n      return alert('Not authorised');\n    }\n\n    return this.db.doc(`users_codedamn_video/${this.auth.currentUseruid}`).push().set({\n      description,\n      title,\n      date\n    }); // fire.database().ref('description').push().set({ title, description,date })\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n\n  getCurrentUsername() {\n    return this.auth.currentUser && this.auth.currentUser.displayName;\n  }\n\n  async getCurrentUserDescription() {\n    const description = await this.db.doc(`users_codedamn_video/${this.auth.currentUseruid}`).get();\n    return description.get('description');\n  }\n\n  async getCurrentUserTitle() {\n    const description = await this.db.doc(`users_codedamn_video/${this.auth.currentUseruid}`).get();\n    return description.get('title');\n  }\n\n  async getCurrentUserDate() {\n    const description = await this.db.doc(`users_codedamn_video/${this.auth.currentUseruid}`).get();\n    return description.get('date');\n  }\n\n}\n\nexport default new Firebase();","map":{"version":3,"sources":["D:/React/sayone_test/src/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","Firebase","constructor","auth","db","firestore","addEvents","title","description","date","eventRef","database","ref","event","push","getEvents","on","snapshot","todos","val","todoList","id","login","email","password","signInWithEmailAndPassword","logout","signOut","register","firstName","lastName","phoneNumber","acceptTerms","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","addEvent","alert","doc","currentUseruid","set","isInitialized","Promise","resolve","onAuthStateChanged","getCurrentUsername","getCurrentUserDescription","get","getCurrentUserTitle","getCurrentUserDate"],"mappings":"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","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA4Ie918eDFKCus2bbBqicVXVUnR4Ih-kk\",\r\n    authDomain: \"testproject-5c3fd.firebaseapp.com\",\r\n    projectId: \"testproject-5c3fd\",\r\n    storageBucket: \"testproject-5c3fd.appspot.com\",\r\n    messagingSenderId: \"854663840169\",\r\n    appId: \"1:854663840169:web:5c29535fa95583c5f084b8\",\r\n    measurementId: \"G-9RYWCQKJKQ\"\r\n};\r\n\r\n// export const auth = firebase.auth();\r\n// export const firestore = firebase.firestore();\r\nfirebase.initializeApp(firebaseConfig);\r\nclass Firebase {\r\n    constructor() {\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore()\r\n    }\r\n    addEvents(title, description, date) {\r\n        const eventRef = firebase.database().ref('Event')\r\n        const event = {\r\n            title,\r\n            description,\r\n            date\r\n        }\r\n        eventRef.push(event)\r\n    }\r\n    getEvents() {\r\n        const eventRef = firebase.database().ref('Event')\r\n        eventRef.on('value', (snapshot) => {\r\n            const todos = snapshot.val()\r\n            const todoList = []\r\n            for (let id in todos) {\r\n                todoList.push(todos[id])\r\n            }\r\n            return todoList;\r\n        })\r\n    }\r\n    login(email, password) {\r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    logout() {\r\n        return this.auth.signOut()\r\n    }\r\n    async register(firstName, lastName, phoneNumber, acceptTerms, email, password) {\r\n        await this.auth.createUserWithEmailAndPassword(email, password)\r\n        return this.auth.currentUser.updateProfile({ displayName: firstName + ' ' + lastName, phoneNumber: phoneNumber, acceptTerms: acceptTerms, email: email, password: password })\r\n    }\r\n    addEvent(title, description, date) {\r\n        if (!this.auth.currentUser) {\r\n            return alert('Not authorised')\r\n        }\r\n        return this.db.doc(`users_codedamn_video/${this.auth.currentUseruid}`).push().set({ description, title, date })\r\n        // fire.database().ref('description').push().set({ title, description,date })\r\n    }\r\n    isInitialized() {\r\n        return new Promise(resolve => {\r\n            this.auth.onAuthStateChanged(resolve)\r\n        })\r\n    }\r\n    getCurrentUsername() {\r\n        return this.auth.currentUser && this.auth.currentUser.displayName\r\n    }\r\n    async getCurrentUserDescription() {\r\n        const description = await this.db.doc(`users_codedamn_video/${this.auth.currentUseruid}`).get()\r\n        return description.get('description')\r\n    }\r\n    async getCurrentUserTitle() {\r\n        const description = await this.db.doc(`users_codedamn_video/${this.auth.currentUseruid}`).get()\r\n        return description.get('title')\r\n    }\r\n    async getCurrentUserDate() {\r\n        const description = await this.db.doc(`users_codedamn_video/${this.auth.currentUseruid}`).get()\r\n        return description.get('date')\r\n    }\r\n}\r\nexport default new Firebase;"]},"metadata":{},"sourceType":"module"}