{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\sayone_test\\\\src\\\\components\\\\Home\\\\Event.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport AddEvent from './AddEvent';\nimport Modal from '@material-ui/core/Modal';\nimport firebase from '../../firebase';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles(theme => ({\n  text: {\n    textTransform: 'none'\n  },\n  paper: {\n    height: 100,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  widthMax: {\n    maxWidth: 345,\n    margin: 'auto',\n    marginTop: 40\n  }\n}));\n\nconst Event = () => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [title, setTitle] = useState([]);\n  const [description, setDescription] = useState([]);\n  const [date, setDate] = useState([]);\n  const [eventList, seteventList] = useState([]); // useEffect(() => {\n  //     firebase.getCurrentUserDescription().then(setDescription)\n  //     firebase.getCurrentUserTitle().then(setTitle)\n  //     firebase.getCurrentUserDate().then(setDate)\n  // })\n\n  useEffect(() => {\n    const eventRef = firebase.getEvents();\n    eventRef.on('value', snapshot => {\n      const event = snapshot.val();\n      const eventList = [];\n\n      for (let id in event) {\n        eventList.push(event[id]);\n      }\n\n      seteventList(eventList);\n      console.log(eventList, 'from fire ');\n    });\n  }, []);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    spacing: 3\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"medium\",\n    color: \"primary\",\n    variant: \"contained\",\n    className: classes.text,\n    onClick: handleOpen\n  }, \"Add new Event\")))), /*#__PURE__*/React.createElement(\"div\", null, eventList && eventList.map(event => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-container\"\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.widthMax\n  }, /*#__PURE__*/React.createElement(CardActionArea, null, /*#__PURE__*/React.createElement(CardContent, null, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\"\n  }, String(event.title).toLocaleUpperCase()), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\"\n  }, event.description))), /*#__PURE__*/React.createElement(CardActions, null, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\"\n  }, event.date)))))), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, /*#__PURE__*/React.createElement(AddEvent, {\n    onClose: handleClose\n  })));\n};\n\nexport default Event;","map":{"version":3,"sources":["D:/React/sayone_test/src/components/Home/Event.jsx"],"names":["React","useEffect","useState","Button","makeStyles","Paper","Grid","AddEvent","Modal","firebase","Card","CardActionArea","CardActions","CardContent","Typography","useStyles","theme","text","textTransform","paper","height","width","display","alignItems","justifyContent","widthMax","maxWidth","margin","marginTop","Event","classes","open","setOpen","title","setTitle","description","setDescription","date","setDate","eventList","seteventList","eventRef","getEvents","on","snapshot","event","val","id","push","console","log","handleClose","handleOpen","map","String","toLocaleUpperCase"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddEvent from './AddEvent';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport firebase from '../../firebase';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    text: {\r\n        textTransform: 'none',\r\n    },\r\n    paper: {\r\n        height: 100,\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    widthMax: {\r\n        maxWidth: 345,\r\n        margin: 'auto',\r\n        marginTop: 40\r\n    },\r\n}));\r\n\r\nconst Event = () => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [title, setTitle] = useState([])\r\n    const [description, setDescription] = useState([])\r\n    const [date, setDate] = useState([])\r\n    const [eventList, seteventList] = useState([])\r\n    // useEffect(() => {\r\n    //     firebase.getCurrentUserDescription().then(setDescription)\r\n    //     firebase.getCurrentUserTitle().then(setTitle)\r\n    //     firebase.getCurrentUserDate().then(setDate)\r\n    // })\r\n    useEffect(() => {\r\n        const eventRef = firebase.getEvents();\r\n        eventRef.on('value', (snapshot) => {\r\n            const event = snapshot.val()\r\n            const eventList = []\r\n            for (let id in event) {\r\n                eventList.push(event[id])\r\n            }\r\n            seteventList(eventList)\r\n            console.log(eventList, 'from fire ')\r\n        })\r\n    }, [])\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Grid spacing={3} >\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <Button size=\"medium\" color=\"primary\" variant=\"contained\" className={classes.text} onClick={handleOpen}>\r\n                            Add new Event\r\n                        </Button>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n            <div>\r\n                {eventList && eventList.map((event) => (\r\n                    <div className='card-container'>\r\n                        <Card className={classes.widthMax}>\r\n                            <CardActionArea>\r\n                                <CardContent>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        {String(event.title).toLocaleUpperCase()}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {event.description}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                    {event.date}\r\n                                </Typography>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n            >\r\n                <AddEvent onClose={handleClose} />\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Event;"]},"metadata":{},"sourceType":"module"}