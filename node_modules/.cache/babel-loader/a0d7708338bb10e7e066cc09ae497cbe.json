{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\sayone_test\\\\src\\\\components\\\\Hooks\\\\HookCounterTwo.jsx\";\nimport { values } from 'mobx';\nimport React, { useState } from 'react';\n\nconst HookCounterTwo = () => {\n  const initialValue = 0;\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    for (let i = 0; i < 5; i++) {\n      // safe way to increment using prev values\n      setCount(prevCount => prevCount + 1);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h1\", null, \"Count \", count), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(count + 1)\n  }, \"Increment\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(count - 1)\n  }, \"Decrement\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(initialValue)\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: increment\n  }, \"Increase 5\"));\n};\n\nexport default HookCounterTwo;","map":{"version":3,"sources":["D:/React/sayone_test/src/components/Hooks/HookCounterTwo.jsx"],"names":["values","React","useState","HookCounterTwo","initialValue","count","setCount","increment","i","prevCount"],"mappings":";AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,YAAY,GAAG,CAArB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMK,SAAS,GAAG,MAAM;AACpB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB;AACAF,MAAAA,QAAQ,CAACG,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAR;AACH;AACJ,GALD;;AAMA,sBACI,8CACI,0CAAWJ,KAAX,CADJ,eAGI;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT;AAA/B,iBAHJ,eAII;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT;AAA/B,iBAJJ,eAKI;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACF,YAAD;AAA/B,aALJ,eAMI;AAAQ,IAAA,OAAO,EAAEG;AAAjB,kBANJ,CADJ;AAUH,CAnBD;;AAoBA,eAAeJ,cAAf","sourcesContent":["import { values } from 'mobx';\r\nimport React, { useState } from 'react';\r\n\r\nconst HookCounterTwo = () => {\r\n    const initialValue = 0;\r\n    const [count, setCount] = useState(0);\r\n    const increment = () => {\r\n        for (let i = 0; i < 5; i++) {\r\n            // safe way to increment using prev values\r\n            setCount(prevCount => prevCount + 1)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Count {count}</h1>\r\n            {/* unsafe way of set count */}\r\n            <button onClick={() => setCount(count + 1)}>Increment</button>\r\n            <button onClick={() => setCount(count - 1)}>Decrement</button>\r\n            <button onClick={() => setCount(initialValue)}>Reset</button>\r\n            <button onClick={increment}>Increase 5</button>\r\n        </div>\r\n    )\r\n}\r\nexport default HookCounterTwo;\r\n"]},"metadata":{},"sourceType":"module"}