{"ast":null,"code":"import firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\"; // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA4Ie918eDFKCus2bbBqicVXVUnR4Ih-kk\",\n  authDomain: \"testproject-5c3fd.firebaseapp.com\",\n  projectId: \"testproject-5c3fd\",\n  storageBucket: \"testproject-5c3fd.appspot.com\",\n  messagingSenderId: \"854663840169\",\n  appId: \"1:854663840169:web:5c29535fa95583c5f084b8\",\n  measurementId: \"G-9RYWCQKJKQ\"\n}; // export const auth = firebase.auth();\n// export const firestore = firebase.firestore();\n\nfirebase.initializeApp(firebaseConfig);\n\nclass Firebase {\n  constructor() {\n    this.auth = firebase.auth();\n    this.db = firebase.firestore();\n  } //adding event details to the firebase\n\n\n  addEvents(title, description, date) {\n    const eventRef = firebase.database().ref('Event');\n    const event = {\n      title,\n      description,\n      date\n    };\n    eventRef.push(event);\n  } //retrieve event details to display in login page\n\n\n  getEvents() {\n    return firebase.database().ref('Event');\n  } //retrieve blogs data from firebase database\n\n\n  getBlogs() {\n    return firebase.database().ref('Blogs');\n  } //login into application by authenticating user through firebase\n\n\n  login(email, password) {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  } //logout user\n\n\n  logout() {\n    return this.auth.signOut();\n  } //register user with firefox with authentication\n\n\n  async register(firstName, lastName, phoneNumber, acceptTerms, email, password) {\n    await this.auth.createUserWithEmailAndPassword(email, password);\n    return this.auth.currentUser.updateProfile({\n      displayName: firstName + ' ' + lastName,\n      phoneNumber: phoneNumber,\n      acceptTerms: acceptTerms,\n      email: email,\n      password: password\n    });\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  } //get current username from firebase\n\n\n  getCurrentUsername() {\n    return this.auth.currentUser && this.auth.currentUser.displayName;\n  }\n\n}\n\nexport default new Firebase();","map":{"version":3,"sources":["D:/React/sayone_test/src/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","Firebase","constructor","auth","db","firestore","addEvents","title","description","date","eventRef","database","ref","event","push","getEvents","getBlogs","login","email","password","signInWithEmailAndPassword","logout","signOut","register","firstName","lastName","phoneNumber","acceptTerms","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","isInitialized","Promise","resolve","onAuthStateChanged","getCurrentUsername"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP,C,CAEA;;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,mCAFO;AAGnBC,EAAAA,SAAS,EAAE,mBAHQ;AAInBC,EAAAA,aAAa,EAAE,+BAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE,2CANY;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAAvB,C,CAUA;AACA;;AACAR,QAAQ,CAACS,aAAT,CAAuBR,cAAvB;;AACA,MAAMS,QAAN,CAAe;AACXC,EAAAA,WAAW,GAAG;AACV,SAAKC,IAAL,GAAYZ,QAAQ,CAACY,IAAT,EAAZ;AACA,SAAKC,EAAL,GAAUb,QAAQ,CAACc,SAAT,EAAV;AACH,GAJU,CAKX;;;AACAC,EAAAA,SAAS,CAACC,KAAD,EAAQC,WAAR,EAAqBC,IAArB,EAA2B;AAChC,UAAMC,QAAQ,GAAGnB,QAAQ,CAACoB,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,CAAjB;AACA,UAAMC,KAAK,GAAG;AACVN,MAAAA,KADU;AAEVC,MAAAA,WAFU;AAGVC,MAAAA;AAHU,KAAd;AAKAC,IAAAA,QAAQ,CAACI,IAAT,CAAcD,KAAd;AACH,GAdU,CAeX;;;AACAE,EAAAA,SAAS,GAAG;AACR,WAAOxB,QAAQ,CAACoB,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,CAAP;AACH,GAlBU,CAmBX;;;AACAI,EAAAA,QAAQ,GAAG;AACP,WAAOzB,QAAQ,CAACoB,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,CAAP;AACH,GAtBU,CAuBX;;;AACAK,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAkB;AACnB,WAAO,KAAKhB,IAAL,CAAUiB,0BAAV,CAAqCF,KAArC,EAA4CC,QAA5C,CAAP;AACH,GA1BU,CA2BX;;;AACAE,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKlB,IAAL,CAAUmB,OAAV,EAAP;AACH,GA9BU,CA+BX;;;AACA,QAAMC,QAAN,CAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,WAApC,EAAiDC,WAAjD,EAA8DT,KAA9D,EAAqEC,QAArE,EAA+E;AAC3E,UAAM,KAAKhB,IAAL,CAAUyB,8BAAV,CAAyCV,KAAzC,EAAgDC,QAAhD,CAAN;AACA,WAAO,KAAKhB,IAAL,CAAU0B,WAAV,CAAsBC,aAAtB,CAAoC;AAAEC,MAAAA,WAAW,EAAEP,SAAS,GAAG,GAAZ,GAAkBC,QAAjC;AAA2CC,MAAAA,WAAW,EAAEA,WAAxD;AAAqEC,MAAAA,WAAW,EAAEA,WAAlF;AAA+FT,MAAAA,KAAK,EAAEA,KAAtG;AAA6GC,MAAAA,QAAQ,EAAEA;AAAvH,KAApC,CAAP;AACH;;AACDa,EAAAA,aAAa,GAAG;AACZ,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1B,WAAK/B,IAAL,CAAUgC,kBAAV,CAA6BD,OAA7B;AACH,KAFM,CAAP;AAGH,GAxCU,CAyCX;;;AACAE,EAAAA,kBAAkB,GAAG;AACjB,WAAO,KAAKjC,IAAL,CAAU0B,WAAV,IAAyB,KAAK1B,IAAL,CAAU0B,WAAV,CAAsBE,WAAtD;AACH;;AA5CU;;AA8Cf,eAAe,IAAI9B,QAAJ,EAAf","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA4Ie918eDFKCus2bbBqicVXVUnR4Ih-kk\",\r\n    authDomain: \"testproject-5c3fd.firebaseapp.com\",\r\n    projectId: \"testproject-5c3fd\",\r\n    storageBucket: \"testproject-5c3fd.appspot.com\",\r\n    messagingSenderId: \"854663840169\",\r\n    appId: \"1:854663840169:web:5c29535fa95583c5f084b8\",\r\n    measurementId: \"G-9RYWCQKJKQ\"\r\n};\r\n\r\n// export const auth = firebase.auth();\r\n// export const firestore = firebase.firestore();\r\nfirebase.initializeApp(firebaseConfig);\r\nclass Firebase {\r\n    constructor() {\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore()\r\n    }\r\n    //adding event details to the firebase\r\n    addEvents(title, description, date) {\r\n        const eventRef = firebase.database().ref('Event')\r\n        const event = {\r\n            title,\r\n            description,\r\n            date\r\n        }\r\n        eventRef.push(event)\r\n    }\r\n    //retrieve event details to display in login page\r\n    getEvents() {\r\n        return firebase.database().ref('Event')\r\n    }\r\n    //retrieve blogs data from firebase database\r\n    getBlogs() {\r\n        return firebase.database().ref('Blogs')\r\n    }\r\n    //login into application by authenticating user through firebase\r\n    login(email, password) {\r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    //logout user\r\n    logout() {\r\n        return this.auth.signOut()\r\n    }\r\n    //register user with firefox with authentication\r\n    async register(firstName, lastName, phoneNumber, acceptTerms, email, password) {\r\n        await this.auth.createUserWithEmailAndPassword(email, password)\r\n        return this.auth.currentUser.updateProfile({ displayName: firstName + ' ' + lastName, phoneNumber: phoneNumber, acceptTerms: acceptTerms, email: email, password: password })\r\n    }\r\n    isInitialized() {\r\n        return new Promise(resolve => {\r\n            this.auth.onAuthStateChanged(resolve)\r\n        })\r\n    }\r\n    //get current username from firebase\r\n    getCurrentUsername() {\r\n        return this.auth.currentUser && this.auth.currentUser.displayName\r\n    }\r\n}\r\nexport default new Firebase;"]},"metadata":{},"sourceType":"module"}