{"ast":null,"code":"import app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\"; // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA4Ie918eDFKCus2bbBqicVXVUnR4Ih-kk\",\n  authDomain: \"testproject-5c3fd.firebaseapp.com\",\n  projectId: \"testproject-5c3fd\",\n  storageBucket: \"testproject-5c3fd.appspot.com\",\n  messagingSenderId: \"854663840169\",\n  appId: \"1:854663840169:web:5c29535fa95583c5f084b8\",\n  measurementId: \"G-9RYWCQKJKQ\"\n}; // export const auth = firebase.auth();\n// export const firestore = firebase.firestore();\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth();\n    this.db = app.firestore();\n  }\n\n  login(email, password) {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  logout() {\n    return this.auth.signOut();\n  }\n\n  async register(firstName, lastName, phoneNumber, acceptTerms, email, password) {\n    await this.auth.createUserWithEmailAndPassword(email, password);\n    return this.auth.currentUser.updateProfile({\n      displayName: firstName + ' ' + lastName,\n      phoneNumber: phoneNumber,\n      acceptTerms: acceptTerms,\n      email: email,\n      password: password\n    });\n  }\n\n  addEvent(title, description, date) {\n    if (!this.auth.currentUser) {\n      return alert('Not authorised');\n    }\n\n    return this.db.doc(`users_codedamn_video/${this.auth.currentUseruid}`).set({\n      description,\n      title,\n      date\n    });\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      this.auth.onAuthStateChanged(resolve);\n    });\n  }\n\n  getCurrentUsername() {\n    return this.auth.currentUser && this.auth.currentUser.displayName;\n  }\n\n  async getCurrentUserDescription() {\n    const description = await this.db.doc(`users_codedamn_video/${this.auth.currentUseruid}`).get(); // const result = { description: description.get('description'), title: description.get('title') }\n\n    return {\n      description: description.get('description'),\n      title: description.get('title')\n    }; // return result;\n  }\n\n}\n\nexport default new Firebase();","map":{"version":3,"sources":["D:/React/sayone_test/src/firebase.js"],"names":["app","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","constructor","initializeApp","auth","db","firestore","login","email","password","signInWithEmailAndPassword","logout","signOut","register","firstName","lastName","phoneNumber","acceptTerms","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","addEvent","title","description","date","alert","doc","currentUseruid","set","isInitialized","Promise","resolve","onAuthStateChanged","getCurrentUsername","getCurrentUserDescription","get"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP,C,CAEA;;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,mCAFO;AAGnBC,EAAAA,SAAS,EAAE,mBAHQ;AAInBC,EAAAA,aAAa,EAAE,+BAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE,2CANY;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAAvB,C,CAUA;AACA;;AACA,MAAMC,QAAN,CAAe;AACXC,EAAAA,WAAW,GAAG;AACVV,IAAAA,GAAG,CAACW,aAAJ,CAAkBV,cAAlB;AACA,SAAKW,IAAL,GAAYZ,GAAG,CAACY,IAAJ,EAAZ;AACA,SAAKC,EAAL,GAAUb,GAAG,CAACc,SAAJ,EAAV;AACH;;AACDC,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAkB;AACnB,WAAO,KAAKL,IAAL,CAAUM,0BAAV,CAAqCF,KAArC,EAA4CC,QAA5C,CAAP;AACH;;AACDE,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKP,IAAL,CAAUQ,OAAV,EAAP;AACH;;AACD,QAAMC,QAAN,CAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,WAApC,EAAiDC,WAAjD,EAA8DT,KAA9D,EAAqEC,QAArE,EAA+E;AAC3E,UAAM,KAAKL,IAAL,CAAUc,8BAAV,CAAyCV,KAAzC,EAAgDC,QAAhD,CAAN;AACA,WAAO,KAAKL,IAAL,CAAUe,WAAV,CAAsBC,aAAtB,CAAoC;AAAEC,MAAAA,WAAW,EAAEP,SAAS,GAAG,GAAZ,GAAkBC,QAAjC;AAA2CC,MAAAA,WAAW,EAAEA,WAAxD;AAAqEC,MAAAA,WAAW,EAAEA,WAAlF;AAA+FT,MAAAA,KAAK,EAAEA,KAAtG;AAA6GC,MAAAA,QAAQ,EAAEA;AAAvH,KAApC,CAAP;AACH;;AACDa,EAAAA,QAAQ,CAACC,KAAD,EAAQC,WAAR,EAAqBC,IAArB,EAA2B;AAC/B,QAAI,CAAC,KAAKrB,IAAL,CAAUe,WAAf,EAA4B;AACxB,aAAOO,KAAK,CAAC,gBAAD,CAAZ;AACH;;AACD,WAAO,KAAKrB,EAAL,CAAQsB,GAAR,CAAa,wBAAuB,KAAKvB,IAAL,CAAUwB,cAAe,EAA7D,EAAgEC,GAAhE,CAAoE;AAAEL,MAAAA,WAAF;AAAeD,MAAAA,KAAf;AAAsBE,MAAAA;AAAtB,KAApE,CAAP;AACH;;AACDK,EAAAA,aAAa,GAAG;AACZ,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1B,WAAK5B,IAAL,CAAU6B,kBAAV,CAA6BD,OAA7B;AACH,KAFM,CAAP;AAGH;;AACDE,EAAAA,kBAAkB,GAAG;AACjB,WAAO,KAAK9B,IAAL,CAAUe,WAAV,IAAyB,KAAKf,IAAL,CAAUe,WAAV,CAAsBE,WAAtD;AACH;;AACD,QAAMc,yBAAN,GAAkC;AAC9B,UAAMX,WAAW,GAAG,MAAM,KAAKnB,EAAL,CAAQsB,GAAR,CAAa,wBAAuB,KAAKvB,IAAL,CAAUwB,cAAe,EAA7D,EAAgEQ,GAAhE,EAA1B,CAD8B,CAE9B;;AACA,WAAO;AAAEZ,MAAAA,WAAW,EAAEA,WAAW,CAACY,GAAZ,CAAgB,aAAhB,CAAf;AAA+Cb,MAAAA,KAAK,EAAEC,WAAW,CAACY,GAAZ,CAAgB,OAAhB;AAAtD,KAAP,CAH8B,CAI9B;AACH;;AAnCU;;AAqCf,eAAe,IAAInC,QAAJ,EAAf","sourcesContent":["import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA4Ie918eDFKCus2bbBqicVXVUnR4Ih-kk\",\r\n    authDomain: \"testproject-5c3fd.firebaseapp.com\",\r\n    projectId: \"testproject-5c3fd\",\r\n    storageBucket: \"testproject-5c3fd.appspot.com\",\r\n    messagingSenderId: \"854663840169\",\r\n    appId: \"1:854663840169:web:5c29535fa95583c5f084b8\",\r\n    measurementId: \"G-9RYWCQKJKQ\"\r\n};\r\n\r\n// export const auth = firebase.auth();\r\n// export const firestore = firebase.firestore();\r\nclass Firebase {\r\n    constructor() {\r\n        app.initializeApp(firebaseConfig);\r\n        this.auth = app.auth();\r\n        this.db = app.firestore()\r\n    }\r\n    login(email, password) {\r\n        return this.auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n    logout() {\r\n        return this.auth.signOut()\r\n    }\r\n    async register(firstName, lastName, phoneNumber, acceptTerms, email, password) {\r\n        await this.auth.createUserWithEmailAndPassword(email, password)\r\n        return this.auth.currentUser.updateProfile({ displayName: firstName + ' ' + lastName, phoneNumber: phoneNumber, acceptTerms: acceptTerms, email: email, password: password })\r\n    }\r\n    addEvent(title, description, date) {\r\n        if (!this.auth.currentUser) {\r\n            return alert('Not authorised')\r\n        }\r\n        return this.db.doc(`users_codedamn_video/${this.auth.currentUseruid}`).set({ description, title, date })\r\n    }\r\n    isInitialized() {\r\n        return new Promise(resolve => {\r\n            this.auth.onAuthStateChanged(resolve)\r\n        })\r\n    }\r\n    getCurrentUsername() {\r\n        return this.auth.currentUser && this.auth.currentUser.displayName\r\n    }\r\n    async getCurrentUserDescription() {\r\n        const description = await this.db.doc(`users_codedamn_video/${this.auth.currentUseruid}`).get()\r\n        // const result = { description: description.get('description'), title: description.get('title') }\r\n        return { description: description.get('description'), title: description.get('title') }\r\n        // return result;\r\n    }\r\n}\r\nexport default new Firebase;"]},"metadata":{},"sourceType":"module"}